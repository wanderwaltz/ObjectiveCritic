#--------------------------------------------------------------------------
#  ClassesCountParser.tt
#  ObjectiveCritic
#
#  Created by Egor Chiglintsev on December 27, 2013.
#  Copyright (c) 2013 Egor Chiglintsev. All rights reserved.
#--------------------------------------------------------------------------

module OCritic

  module FileStats

    module Grammars

      grammar ClassesCountGrammar

        rule text
          (
            anything class_interface anything {
              def to_s
                class_interface.name
              end
            }
          )* {
            def class_names
              elements.collect {|elem| elem.class_interface.name }
            end
          }
        end

        # This rule is used to skip all other text in the file besides
        # class interfaces.
        rule anything
          (!class_interface (. / "\n"))*
        end

        rule class_interface
          keyword_interface wsp class_name wsp? category_name? wsp? ":" 
            wsp? superclass_name wsp? protocols_list? class_interface_anything keyword_end {
            def name
              class_name.text_value
            end
          }
        end

        rule category_name
          "(" wsp? identifier wsp? ")"
        end

        # Need a rule separate from 'anything' to avoid infinite recursion.
        # This rule is used inside the class interface to skip ivars, properties
        # and methods - we don't actually need to know about these here.
        rule class_interface_anything
          (!keyword_interface !keyword_end (. / "\n"))*
        end

        rule keyword_interface
          "@interface"
        end

        rule keyword_end
          "@end"
        end

        rule class_name
          identifier
        end

        rule superclass_name
          identifier
        end

        rule identifier
          [a-zA-Z] [a-zA-Z0-9]*
        end

        rule protocols_list
          "<" wsp protocol_name ("," wsp protocol_name)* wsp ">"
        end

        rule protocol_name
          identifier
        end

        rule wsp
          [" " "\t" "\n"]+
        end
      end

    end
  end
end